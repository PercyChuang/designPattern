1.抽象工厂（Creator）角色工厂方法模式的核心，任何工厂类都必须实现这个接口。1

2.具体工厂（ Concrete  Creator）角色具体工厂类是抽象工厂的一个实现，负责实例化产品对象。*

3.抽象（Product）角色工厂方法模式所创建的所有对象的父类，它负责描述所有实例所共有的公共接口。1

4.具体产品（Concrete Product）角色工厂方法模式所创建的具体实例对象 *


工厂方法是针对每一种产品提供一个工厂类。通过不同的工厂实例来创建不同的产品实例。
在同一等级结构中，支持增加任意产品。

到工厂名单中去获取产品即可。不用改原代码。


区别

简单工厂 ： 用来生产同一等级结构中的任意产品。（对于增加新的产品，无能为力）

工厂方法 ：用来生产同一等级结构中的固定产品。（支持增加任意产品）   
抽象工厂 ：用来生产不同产品族的全部产品。（对于增加新的产品，无能为力；支持增加产品族）  

 

以上三种工厂 方法在等级结构和产品族这两个方向上的支持程度不同。所以要根据情况考虑应该使用哪种方法
