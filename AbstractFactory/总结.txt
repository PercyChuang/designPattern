1.抽象工厂（Creator）角色抽象工厂模式的核心，包含对多个产品结构的声明，任何工厂类都必须实现这个接口。

2.具体工厂（ Concrete  Creator）角色具体工厂类是抽象工厂的一个实现，负责实例化某个产品族中的产品对象。

3.抽象（Product）角色抽象模式所创建的所有对象的父类，它负责描述所有实例所共有的公共接口。

4.具体产品（Concrete Product）角色抽象模式所创建的具体实例对象
总结：抽象工厂中方法对应产品结构，具体工厂对应产品族。



抽象工厂是应对产品族概念的。
比如说，每个汽车公司可能要同时生产轿车，货车，客车，那么每一个工厂都要有创建轿车，货车和客车的方法。
应对产品族概念而生，增加新的产品线很容易，但是无法增加新的产品。

在生产线名单中去获取生产线。新加产品要改原代码。


http://blog.csdn.net/superbeck/article/details/4446177
